//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace ManageCenter.SvcManageRef {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DevInfo", Namespace="http://schemas.datacontract.org/2004/07/ScadaWcfLibrary")]
    [System.SerializableAttribute()]
    public partial class DevInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private uint ConnIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ConnectedTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private uint DevIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsOnlineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LastActiveTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProdNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public uint ConnId {
            get {
                return this.ConnIdField;
            }
            set {
                if ((this.ConnIdField.Equals(value) != true)) {
                    this.ConnIdField = value;
                    this.RaisePropertyChanged("ConnId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ConnectedTime {
            get {
                return this.ConnectedTimeField;
            }
            set {
                if ((this.ConnectedTimeField.Equals(value) != true)) {
                    this.ConnectedTimeField = value;
                    this.RaisePropertyChanged("ConnectedTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public uint DevId {
            get {
                return this.DevIdField;
            }
            set {
                if ((this.DevIdField.Equals(value) != true)) {
                    this.DevIdField = value;
                    this.RaisePropertyChanged("DevId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsOnline {
            get {
                return this.IsOnlineField;
            }
            set {
                if ((this.IsOnlineField.Equals(value) != true)) {
                    this.IsOnlineField = value;
                    this.RaisePropertyChanged("IsOnline");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastActiveTime {
            get {
                return this.LastActiveTimeField;
            }
            set {
                if ((this.LastActiveTimeField.Equals(value) != true)) {
                    this.LastActiveTimeField = value;
                    this.RaisePropertyChanged("LastActiveTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProdName {
            get {
                return this.ProdNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProdNameField, value) != true)) {
                    this.ProdNameField = value;
                    this.RaisePropertyChanged("ProdName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SvcManageRef.ISvcManage")]
    public interface ISvcManage {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISvcManage/GetDeviceList", ReplyAction="http://tempuri.org/ISvcManage/GetDeviceListResponse")]
        ManageCenter.SvcManageRef.DevInfo[] GetDeviceList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISvcManage/GetDeviceList", ReplyAction="http://tempuri.org/ISvcManage/GetDeviceListResponse")]
        System.Threading.Tasks.Task<ManageCenter.SvcManageRef.DevInfo[]> GetDeviceListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISvcManage/GetDeviceCount", ReplyAction="http://tempuri.org/ISvcManage/GetDeviceCountResponse")]
        uint GetDeviceCount();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISvcManage/GetDeviceCount", ReplyAction="http://tempuri.org/ISvcManage/GetDeviceCountResponse")]
        System.Threading.Tasks.Task<uint> GetDeviceCountAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISvcManage/AddDevice", ReplyAction="http://tempuri.org/ISvcManage/AddDeviceResponse")]
        void AddDevice(ManageCenter.SvcManageRef.DevInfo dev);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISvcManage/AddDevice", ReplyAction="http://tempuri.org/ISvcManage/AddDeviceResponse")]
        System.Threading.Tasks.Task AddDeviceAsync(ManageCenter.SvcManageRef.DevInfo dev);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISvcManageChannel : ManageCenter.SvcManageRef.ISvcManage, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SvcManageClient : System.ServiceModel.ClientBase<ManageCenter.SvcManageRef.ISvcManage>, ManageCenter.SvcManageRef.ISvcManage {
        
        public SvcManageClient() {
        }
        
        public SvcManageClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SvcManageClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SvcManageClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SvcManageClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public ManageCenter.SvcManageRef.DevInfo[] GetDeviceList() {
            return base.Channel.GetDeviceList();
        }
        
        public System.Threading.Tasks.Task<ManageCenter.SvcManageRef.DevInfo[]> GetDeviceListAsync() {
            return base.Channel.GetDeviceListAsync();
        }
        
        public uint GetDeviceCount() {
            return base.Channel.GetDeviceCount();
        }
        
        public System.Threading.Tasks.Task<uint> GetDeviceCountAsync() {
            return base.Channel.GetDeviceCountAsync();
        }
        
        public void AddDevice(ManageCenter.SvcManageRef.DevInfo dev) {
            base.Channel.AddDevice(dev);
        }
        
        public System.Threading.Tasks.Task AddDeviceAsync(ManageCenter.SvcManageRef.DevInfo dev) {
            return base.Channel.AddDeviceAsync(dev);
        }
    }
}
